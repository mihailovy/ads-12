using System;

class Program
{
    // Максимален брой върхове в графа
    const int MAXN = 200;

    // Брой върхове в графа
    const int n = 14;

    // Обхождане в дълбочина с начало връх v
    const int v = 1;

    // Матрица на съседство на графа
    // 1  2  3  4  5  6  7  8  9 10 11 12 13 14 
    static int[,] A = {
        {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 1
        {1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 2 
        {0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, // 3
        {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, // 4
        {0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, // 5
        {0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0}, // 6
        {0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0}, // 7
        {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, // 8
        {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1}, // 9
        {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0}, //10
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, //11
        {0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, //12
        {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1}, //13
        {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0}  //14
    };

    // Индексите на обходените върхове са индекси на масива,
    // а там където върха е обходен слагаме 1
    static int[] used = new int[MAXN];

    // Печат на обходнените върхове
    static void PrintUsed()
    {
        Console.WriteLine();
        Console.WriteLine("1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14");
        for (int i = 0; i < n; i++)
        {
            Console.Write(used[i] + ", ");
        }
        Console.WriteLine();
    }

    // Обхождане в дълбочина от даден връх
    static void DFS(int i, int level)
    {
        used[i] = 1; // Отбелязваме, че сме обходили i-я връх, като в съответния индекс слагаме 1

        Console.WriteLine();
        Console.WriteLine("Depth first Search of node="+(i + 1)+" and level="+level);

        PrintUsed();
        for (int k = 0; k < n; k++)
        {
            if (A[i, k] == 1 && used[k] == 0)
            {
                DFS(k, level + 1); // Пускаме функцията рекурсивно
            }
        }
    }

    static void Main(string[] args)
    {
        // Инициализация на масив used[], който съдържа всички посетени върхове
        // В тоз имасив индекс+1 отговаря на номера на върха
        // 1 - посeтен
        // 0 - не е посетен
        for (int k = 1; k < n; k++)
        {
            used[k] = 0;
        }

        Console.WriteLine("Initial values of used[]: ");
        PrintUsed();

        DFS(v - 1, 0);
        Console.WriteLine();
    }
}
